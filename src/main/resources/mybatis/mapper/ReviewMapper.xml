<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.book.store.mapper.ReviewMapper">

<!-- 책 아이디(bookId)에 해당하는 한줄평 목록 조회 -->
<!-- <select id="getReviewsByBookId" parameterType="int" resultType="com.example.bookstore.domain.Review">
  SELECT id, book_id, user_id, contents, rating, created_at, updated_at
  FROM review
  WHERE book_id = #{bookId}
</select> -->

<select id="maxNum" resultType="int">
	select nvl(max(num),0) from review
</select>

<insert id="insertData" parameterType="com.book.store.dto.ReviewDTO">
	insert into review (reviewId,seq_No,userName,content,created) 
	values(#{reviewId},#{seq_No},#{userName},#{content},sysdate)
</insert>

<select id="getDataCount" parameterType="map" resultType="int">
	select nvl(count(*),0) from review 
	where ${searchKey} like '%' || #{searchValue} || '%'
</select>

<select id="getLists" parameterType="map" resultType="com.book.store.dto.ReviewDTO">
	select * from (
	select rownum rnum,data.* from (
	select reviewId,seq_No,userName,content,to_char(created,'YYYY-MM-DD') created 
	from review where ${searchKey} like '%' || #{searchValue} || '%' 
	order by num desc) data) 
<![CDATA[
	where rnum>=#{start} and rnum<=#{end}
]]>
</select>

<select id="getReadData" parameterType="int" resultType="com.book.store.dto.ReviewDTO">
	select reviewId,seq_No,userName,userPwd,content,created from review 
	where reviewId=#{reviewId}
</select>

<update id="updateData" parameterType="com.book.store.dto.ReviewDTO">
	update review set content=#{content} 
	where reviewId=#{reviewId}
</update>

<delete id="deleteData" parameterType="int">
	delete from review where reviewId=#{reviewId}
</delete>


</mapper> 
